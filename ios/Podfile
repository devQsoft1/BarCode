require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"

target 'BarCode' do
  config = use_native_modules!

  use_frameworks! :linkage => :static
  pod 'RealmSwift', '~> 3.17', :modular_headers => true
  pod 'Realm', '~> 3.17', :modular_headers => true
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseStorageInternal', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  

  pod 'Firebase', :modular_headers => true
  pod 'FirebaseStorage', :modular_headers => true
  pod 'FirebaseStorageInternal', :modular_headers => true
  pod 'FirebaseAppCheckInterop', :modular_headers => true
  pod 'FirebaseAuthInterop', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true

  # Flags change depending on the env values.
  flags = get_default_flags()
  
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'BarCodeTests' do
    inherit! :complete
    # Pods for testing

  end

  # use_flipper!({ 'Flipper' => '0.125.0', 'Flipper-Folly' => '2.6.10', 'Flipper-RSocket' => '1.4.3', 'Flipper-DoubleConversion' => '3.2.0.1', 'Flipper-Glog' => '0.5.0.5', 'Flipper-PeerTalk' => '0.0.4'})
  use_flipper!()
#   $static_framework = ['FlipperKit', 'Flipper', 'Flipper-Folly',
#   'CocoaAsyncSocket', 'ComponentKit', 'DoubleConversion',
#   'glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'Yoga', 'YogaKit',
#   'CocoaLibEvent', 'OpenSSL-Universal', 'boost-for-react-native']

# use_flipper!({ 'Flipper-Folly' => '2.6.10' })

    
#   pre_install do |installer|
#     Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
#     installer.pod_targets.each do |pod|
#         if $static_framework.include?(pod.name)
#           def pod.build_type;
#             Pod::Target::BuildType.static_library
#           end
#         end
#       end
#  end

  post_install do |installer|
  
    flipper_post_install(installer)
    
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        config.build_settings['CODE_SIGN_IDENTITY'] = 'YES'
        config.build_settings['GENERATE_INFOPLIST_FILE'] = 'YES'
        config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end

    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end


  

end
